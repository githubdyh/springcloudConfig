# 服务端口号
server:
  port: 8002

# 数据库地址
datasource:
  url: 192.168.0.80:3306/ceshi

spring:
  session:
    store-type: none
  redis:
    database: 0
    host: 192.168.0.80
    port: 6379
    timeout: 5000
    pool:
      max-active: -1
      max-wait: -1
      max-idle: 200
      min-idle: 0
  application:
    name: microservice-order-sso # 对外暴露的服务名称

  datasource: # 数据库配置
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.0.80:3306/ceshi?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
    username: root
    password: root
    hikari:
      maximum-pool-size: 10 # 最大连接池数
      max-lifetime: 1770000 # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      ## 最小空闲连接数量
      minimum-idle: 5
      idle-timeout: 180000  # 空闲连接存活最大时间，默认600000（10分钟）
      auto-commit: true # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      pool-name: MyHikariCP # 连接池母子
      connection-timeout: 30000 # 数据库连接超时时间,默认30秒，即30000
      connection-test-query: SELECT 1

mybatis:
  # 指定别名设置的包为所有entity
  type-aliases-package: com.itcodai.springcloud.entity
  # mapper映射文件位置
  mapper-locations: classpath:mybatis/mapper/*.xml
  #config-location: classpath:mybatis/*.xml
  configuration:
    map-underscore-to-camel-case: true # 驼峰命名规范
    #sql详细
logging:
  level:
    com.itcodai.springcloud.ordersso.dao: trace
    #写上dao的位置，也可以把sql语句打印出来
#logging:
#  level:
#    com.gao.cloud.order_service_gld.dao: trace
# 客户端注册进eureka服务列表里
# eureka:
#  client:
#    service-url:
#      defaultZone: http://172.17.0.2:8762/eureka/, #http://eureka02:7002/eureka/,http://eureka03:7003/eureka/,
#  instance:
#    instance-id: sso-8002  # 人性化显示出服务的信息
#    prefer-ip-address: true    # 访问路径可显示ip地址

# 使用actuator来展示项目的基本信息
info:
  author.name: shengwu ni
  app.name: microservice
  server.port: ${server.port}
  application.name: ${spring.application.name}

# 配置hystrix dashboard的url访问
# 开启指标流端点
management:
  endpoints:
    web:
      exposure:
        include: '*' #hystrix.stream    #如果写'*’，代表是暴露所有的端点我们可以看到更多的服务实例相关信息，开放监控内容
  endpoint:
    health:
      show-details: ALWAYS  #health endpoint是否必须显示全部细节
